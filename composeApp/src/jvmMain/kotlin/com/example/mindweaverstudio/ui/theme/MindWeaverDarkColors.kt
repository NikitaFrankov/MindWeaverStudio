package com.example.mindweaverstudio.ui.theme

import androidx.compose.ui.graphics.Color

object MindWeaverDarkColors {
    // ---------- БАЗОВЫЙ ФОН ----------
    val RootBackground = Color(0xFF0E1116)
    // Самый глубокий фон всего приложения (корневой слой).
    // Применять: за всеми панелями, в пустых областях, как "canvas".
    // Используется редко напрямую, но формирует общий "чёрный-близкий" фон.

    // ---------- ПОВЕРХНОСТИ (ELEVATION) ----------
    val Surface1 = Color(0xFF12151C) 
    // Базовый уровень поверхностей (панели, сайдбар, тулбар).
    // Применять: главный фон экранов, фон боковой панели, фон вкладок в неактивном состоянии.

    val Surface2 = Color(0xFF161A22) 
    // Поверхность второго уровня (повышенная).
    // Применять: карточки, активные вкладки, выделенные строки списка, элементы с небольшим "возвышением".

    val Surface3 = Color(0xFF1B202A) 
    // Поверхность третьего уровня (ещё выше).
    // Применять: всплывающие меню, контекстные тултипы, дропдауны.

    val Surface4 = Color(0xFF212735) 
    // Самая высокая поверхность.
    // Применять: модальные окна, диалоги, шторки, критичные оверлеи.
    // Этот слой всегда "над" всем остальным.

    // ---------- ГРАНИЦЫ ----------
    val BorderSubtle = Color(0xFF1A2030) 
    // Едва заметные разделители.
    // Применять: для внутренней сетки, разделения строк таблицы или слабых бордеров карточек.

    val BorderNeutral = Color(0xFF2A3344) 
    // Стандартная граница.
    // Применять: кнопки secondary, поля ввода, контуры блоков и панелей.

    val BorderStrong = Color(0xFF3A455A) 
    // Сильная граница.
    // Применять: модальные окна, акцентное обрамление, границы в high-contrast режиме.

    // ---------- ТЕКСТ ----------
    val TextPrimary = Color(0xFFE6EAF2) 
    // Основной текст.
    // Применять: заголовки, основной контент, всегда приоритетный текст.

    val TextSecondary = Color(0xFFB3BCD6) 
    // Второстепенный текст.
    // Применять: подписи, мета-информация, вторичные значения в списках.

    val TextMuted = Color(0xFF8993A5) 
    // Ослабленный текст.
    // Применять: плейсхолдеры, комментарии, подсказки, малозначимый текст.

    val TextDisabled = Color(0xFF5A6270) 
    // Неактивный текст.
    // Применять: задизейбленные кнопки, поля, текстовые метки, которые нельзя трогать.

    val TextInvert = Color(0xFF0E1116) 
    // Инвертированный текст.
    // Применять: текст на ярких акцентных кнопках, бейджах, success/error-сурфейсах.
    // Гарантия контраста на цветных фонах.

    // ---------- АКЦЕНТ (БРЕНД) ----------
    val Accent300 = Color(0xFF8BC0FF) 
    // Светлый оттенок акцента.
    // Применять: hover состояния, светлые бордеры, второстепенные иконки с акцентом.

    val Accent400 = Color(0xFF5AA2FF) 
    // Hover/Focus-акцент.
    // Применять: подсветка фокуса, ховеры кнопок, акцентные бордеры в активных состояниях.

    val Accent500 = Color(0xFF3D8BFF) 
    // Главный акцентный цвет.
    // Применять: primary-кнопки, активные чекбоксы, переключатели, выделенные элементы.

    val Accent600 = Color(0xFF2F74E0) 
    // Тёмный акцент.
    // Применять: pressed-состояния кнопок, более "серьёзный" вид для акцентных элементов.

    val Accent700 = Color(0xFF245DB8) 
    // Самый глубокий акцент.
    // Применять: бордеры вокруг выделенных элементов, бейджи с сильным акцентом, фон в hover-selected.

    // ---------- СЕМАНТИКА (УСПЕХ/ОШИБКИ/ПРЕДУПРЕЖДЕНИЯ) ----------
    val Success = Color(0xFF3ED598) 
    // Основной зелёный успеха.
    // Применять: иконки успеха, зелёные бейджи, текст статуса.

    val SuccessSurface = Color(0xFF133024) 
    // Фон для успеха.
    // Применять: алерт-баннеры успеха, фон бейджа success.

    val SuccessBorder = Color(0xFF1F7A55) 
    // Бордер успеха.
    // Применять: выделение успеха в таблицах, обводка карточек с положительным статусом.

    val Warning = Color(0xFFF5A524) 
    // Основной жёлто-оранжевый для предупреждений.
    // Применять: иконки, кнопки предупреждений, акценты.

    val WarningSurface = Color(0xFF2A1E0A) 
    // Фон для предупреждений.
    // Применять: баннеры warning, выделенные строки с предупреждениями.

    val WarningBorder = Color(0xFF8C5E13) 
    // Бордер предупреждения.
    // Применять: контур карточек с предупреждениями, акцентные линии.

    val Error = Color(0xFFFF6B6B) 
    // Основной красный для ошибок.
    // Применять: кнопки destructive, алерты, иконки ошибок.

    val ErrorSurface = Color(0xFF331418) 
    // Фон для ошибок.
    // Применять: баннеры с ошибками, подсветка строк с ошибками.

    val ErrorBorder = Color(0xFFA83A43) 
    // Бордер ошибки.
    // Применять: выделение ошибочных полей ввода, красные рамки.

    val Info = Color(0xFF60A5FA) 
    // Голубой для информационных сообщений.
    // Применять: иконки info, подсказки, бейджи-инфо.

    val InfoSurface = Color(0xFF102133) 
    // Фон для информационных блоков.
    // Применять: алерты info, тултипы.

    val InfoBorder = Color(0xFF2A5A96) 
    // Бордер для информационных элементов.
    // Применять: выделение панелей с подсказками, карточек.

    // ---------- ВЫДЕЛЕНИЯ В РЕДАКТОРЕ ----------
    val Selection = Color(0xFF23344D) 
    // Фон выделенного текста.
    // Применять: выделение в редакторе, выбранные элементы списка, выделение строк.

    val Caret = Color(0xFF73CFFF) 
    // Цвет курсора ввода.
    // Применять: каретка в редакторе кода или поле ввода.

    val MatchBrackets = Color(0xFF3B6EA8) 
    // Подсветка парных скобок/тегов.
    // Применять: редакторский фон вокруг выделенной пары, маркеры синтаксиса.
}